name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
#name: CI
#on:
#- push
#jobs:
#  xenial:
#    container:
#      image: vapor3/swift:5.2-xenial
#    services:
#      psql:
#        image: postgres
#        ports:
#          - 5432:5432
#        env:
#          POSTGRES_USER: steampress
#          POSTGRES_DB: steampress-test
#          POSTGRES_PASSWORD: password
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v1
#    - run: swift test --enable-test-discovery --enable-code-coverage
#      env:
#        DATABASE_HOSTNAME: psql
#        DATABASE_PORT: 5432
#  bionic:
#    container:
#      image: vapor3/swift:5.2-bionic
#    services:
#      psql:
#        image: postgres
#        ports:
#          - 5432:5432
#        env:
#          POSTGRES_USER: steampress
#          POSTGRES_DB: steampress-test
#          POSTGRES_PASSWORD: password
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v1
#    - name: Run Bionic Tests
#      run: swift test --enable-test-discovery --enable-code-coverage
#      env:
#        DATABASE_HOSTNAME: psql
#        DATABASE_PORT: 5432
#    - name: Setup container for codecov upload
#      run: apt-get update && apt-get install curl -y
#    - name: Process coverage file
#      run: llvm-cov show .build/x86_64-unknown-linux-gnu/debug/SteamPressExamplePackageTests.xctest -instr-profile=.build/debug/codecov/default.profdata > coverage.txt
#    - name: Upload code coverage
#      uses: codecov/codecov-action@v1
#      with:
#        token: ${{ secrets.CODECOV_UPLOAD_KEY }}
#        file: coverage.txt
