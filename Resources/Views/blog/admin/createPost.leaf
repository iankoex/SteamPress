<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Create Post</title>
    <link href="https://fonts.googleapis.com/css?family=PT+Mono" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/iankoex/sp-assets@main/custom.min.css">
    <link href="/static/css/demo.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
</head>

<body>
    <div class="ce">
        <div class="ce-content _ce-content--small">

            <div class="ce-editor" id="editorjs"></div>

            <div class="ce-statusbar">
               <div>
                <a class="ce-statusbar-button">
                    back
                </a>
                <span class="ce-header-logo">Create Post</span>
               </div>

                <div>
                    <div class="ce-statusbar-button" id="saveButton">
                        editor.save()
                    </div>
                    <div class="ce-statusbar-button" id="saveButton">
                        side bar
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="ce-side">
        <p>dsdsdsds</p>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/@editorjs/header@latest"></script><!-- Header -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/image@2.3.0"></script><!-- Image -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/delimiter@latest"></script><!-- Delimiter -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/list@latest"></script><!-- List -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/checklist@latest"></script><!-- Checklist -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/quote@latest"></script><!-- Quote -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/code@latest"></script><!-- Code -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/embed@latest"></script><!-- Embed -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/table@latest"></script><!-- Table -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/link@latest"></script><!-- Link -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/warning@latest"></script><!-- Warning -->

    <script src="https://cdn.jsdelivr.net/npm/@editorjs/marker@latest"></script><!-- Marker -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/inline-code@latest"></script><!-- Inline Code -->

    <!-- Load Editor.js's Core -->
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/editorjs@latest"></script>

    <!-- Initialization -->
    <script>
        var editor = new EditorJS({
            readOnly: false,
            holder: 'editorjs',
            tools: {
                header: {
                    class: Header,
                    inlineToolbar: ['marker', 'link'],
                    config: {
                        placeholder: 'Header'
                    },
                    shortcut: 'CMD+SHIFT+H'
                },

                image: {
                    class: ImageTool,
                    config: {
                        endpoints: {
                            byFile: '#(site.url)steampress/uploadImage',
                            byUrl: '#(site.url)steampress/uploadImageURL',
                        }
                    },
                },

                list: {
                    class: List,
                    inlineToolbar: true,
                    shortcut: 'CMD+SHIFT+L'
                },

                checklist: {
                    class: Checklist,
                    inlineToolbar: true,
                },

                quote: {
                    class: Quote,
                    inlineToolbar: true,
                    config: {
                        quotePlaceholder: 'Enter a quote',
                        captionPlaceholder: 'Quote\'s author',
                    },
                    shortcut: 'CMD+SHIFT+O'
                },

                warning: Warning,

                marker: {
                    class: Marker,
                    shortcut: 'CMD+SHIFT+M'
                },

                code: {
                    class: CodeTool,
                    shortcut: 'CMD+SHIFT+C'
                },

                delimiter: Delimiter,

                inlineCode: {
                    class: InlineCode,
                    shortcut: 'CMD+SHIFT+C'
                },

                linkTool: LinkTool,

                embed: Embed,

                table: {
                    class: Table,
                    inlineToolbar: true,
                    shortcut: 'CMD+ALT+T'
                },

            },
            defaultBlock: 'paragraph',
            data: {
                blocks: [
                    {
                        type: "header",
                        data: {
                            text: "Title here",
                            level: 1
                        }
                    },
                    {
                        type: 'image',
                        data: {
                            url: '',
                            caption: 'Image caption',
                            stretched: false,
                            withBorder: false,
                            withBackground: false,
                        }
                    },
                ]
            },
            onReady: function () {
                saveButton.click();
            },
            onChange: function (api, event) {
                console.log('something changed', event);
            }
        });

        /**
         * Saving button
         */
        const saveButton = document.getElementById('saveButton');

        /**
         * Toggle read-only button
         */
        const toggleReadOnlyButton = document.getElementById('toggleReadOnlyButton');
        const readOnlyIndicator = document.getElementById('readonly-state');

        /**
         * Saving example
         */
        saveButton.addEventListener('click', function () {
            editor.save()
                .then((savedData) => {
                    console.log('Saved');

                })
                .catch((error) => {
                    console.error('Saving error', error);
                });
        });

        /**
         * Toggle read-only example
         */
        toggleReadOnlyButton.addEventListener('click', async () => {
            const readOnlyState = await editor.readOnly.toggle();

            readOnlyIndicator.textContent = readOnlyState ? 'On' : 'Off';
        });
    </script>
</body>

</html>